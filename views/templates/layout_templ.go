// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// Main layout template with navbar
func Layout(title string, content templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = LayoutWithNav(title, content, "").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Main layout template with navbar and current page highlighting
func LayoutWithNav(title string, content templ.Component, currentPage string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/templates/layout.templ`, Line: 15, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><!-- Bootstrap 5 CDN --><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"><script src=\"https://cdn.jsdelivr.net/npm/htmx.org@2.0.6/dist/htmx.min.js\"></script><!-- Vue.js 3 CDN --><script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script><link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css\"><style>\n\t\t\t\t.request-card {\n\t\t\t\t\ttransition: all 0.2s ease-in-out;\n\t\t\t\t\tborder: 1px solid #dee2e6;\n\t\t\t\t}\n\t\t\t\t.request-card:hover {\n\t\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t\tbox-shadow: 0 4px 8px rgba(0,0,0,0.1);\n\t\t\t\t\tborder-color: #007bff;\n\t\t\t\t}\n\t\t\t\tpre {\n\t\t\t\t\tbackground-color: #f8f9fa;\n\t\t\t\t\tborder: 1px solid #e9ecef;\n\t\t\t\t\tborder-radius: 0.375rem;\n\t\t\t\t\tpadding: 1rem;\n\t\t\t\t\twhite-space: pre-wrap;\n\t\t\t\t\tword-wrap: break-word;\n\t\t\t\t}\n\t\t\t\t.url-text {\n\t\t\t\t\tfont-family: 'Courier New', monospace;\n\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\tword-break: break-all;\n\t\t\t\t}\n\t\t\t\t.content-preview {\n\t\t\t\t\tmax-height: 200px;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.content-preview::after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\theight: 30px;\n\t\t\t\t\tbackground: linear-gradient(transparent, #f8f9fa);\n\t\t\t\t}\n\t\t\t\t.content-expanded {\n\t\t\t\t\tmax-height: none;\n\t\t\t\t}\n\t\t\t\t.content-expanded::after {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t/* Badge styling with proper colors */\n\t\t\t\t.badge {\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\ttext-shadow: 0 1px 2px rgba(0,0,0,0.3);\n\t\t\t\t\tfont-size: 0.875rem;\n\t\t\t\t\tpadding: 0.375rem 0.75rem;\n\t\t\t\t}\n\t\t\t\t.badge.bg-success {\n\t\t\t\t\tbackground-color: #198754 !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-primary {\n\t\t\t\t\tbackground-color: #0d6efd !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-warning {\n\t\t\t\t\tbackground-color: #fd7e14 !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-danger {\n\t\t\t\t\tbackground-color: #dc3545 !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-info {\n\t\t\t\t\tbackground-color: #0dcaf0 !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-dark {\n\t\t\t\t\tbackground-color: #212529 !important;\n\t\t\t\t}\n\t\t\t\t.badge.bg-secondary {\n\t\t\t\t\tbackground-color: #6c757d !important;\n\t\t\t\t}\n\t\t\t\t/* View More button styling - full width */\n\t\t\t\t.view-more-btn {\n\t\t\t\t\twidth: 100% !important;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\t\t\t\t/* Import job card styling */\n\t\t\t\t.import-job-card {\n\t\t\t\t\ttransition: all 0.2s ease-in-out;\n\t\t\t\t\tborder: 1px solid #dee2e6;\n\t\t\t\t}\n\t\t\t\t.import-job-card:hover {\n\t\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t\tbox-shadow: 0 4px 8px rgba(0,0,0,0.1);\n\t\t\t\t\tborder-color: #007bff;\n\t\t\t\t}\n\t\t\t\t/* Active nav link styling */\n\t\t\t\t.nav-link.active {\n\t\t\t\t\tbackground-color: #007bff !important;\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t\tborder-radius: 0.375rem;\n\t\t\t\t}\n\t\t\t</style></head><body hx-target=\"#main\" hx-swap=\"innerHTML\" hx-boost=\"true\"><nav class=\"navbar navbar-expand-lg bg-light border-bottom\"><div class=\"container-fluid\"><span class=\"navbar-brand\">App</span> <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button><div class=\"collapse navbar-collapse\" id=\"navbarNav\"><div class=\"navbar-nav\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 = []any{getNavLinkClass(currentPage, "home")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<a class=\"nav-link\" href=\"/dashboard/\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var4).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/templates/layout.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\">Home</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 = []any{getNavLinkClass(currentPage, "import")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var6...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<a class=\"nav-link\" href=\"/dashboard/import\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var6).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/templates/layout.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\">Import File</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 = []any{getNavLinkClass(currentPage, "jobs")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var8...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<a class=\"nav-link\" href=\"/dashboard/import-jobs\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var8).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/templates/layout.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\">Jobs</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 = []any{getNavLinkClass(currentPage, "requests")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var10...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<a class=\"nav-link\" href=\"/dashboard/requests\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var10).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/templates/layout.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\">Requests</a> <a class=\"nav-link text-danger\" href=\"/logout\" hx-post=\"/logout\" hx-target=\"body\">Quit</a></div></div></div></nav><div id=\"main\" class=\"container\"><div id=\"flash\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div><!-- Bootstrap JS (for responsive toggle) --><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper function to get nav link class based on current page
func getNavLinkClass(currentPage, page string) string {
	if currentPage == page {
		return "nav-link active"
	}
	return "nav-link"
}

var _ = templruntime.GeneratedTemplate
